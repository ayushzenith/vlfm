# @package _global_

defaults:
  - /habitat_baselines: habitat_baselines_rl_config_base
  - /benchmark/nav: vln_r2r
  # - /benchmark/nav/objectnav: objectnav_mp3d
  - /habitat/task/lab_sensors:
      - base_explorer
      - compass_sensor
      - gps_sensor
      - heading_sensor
      - frontier_sensor
  - /habitat/task/measurements:
    - frontier_exploration_map
    - traveled_stairs
    - gt_path_vln
  - /habitat_baselines/rl/policy: zsos_policy
  - _self_

habitat:
  environment:
    iterator_options:
      max_scene_repeat_steps: 50000
  simulator:
    action_space_config: v0
    forward_step_size: 0.25
    turn_angle: 15
    agents:
      main_agent:
        sim_sensors:
          rgb_sensor:
            type: HabitatSimRGBSensor
            height: 244
            width: 244
            hfov: 90
          depth_sensor:
            type: HabitatSimDepthSensor
            height: 256
            width: 256
            hfov: 90
    agents_order:
    - main_agent
  dataset:
    type: R2RVLN-v1
    data_path: data/datasets/R2R_VLNCE_v1-3_preprocessed/{split}/{split}.json.gz
  task:
    reward_measure: distance_to_goal_reward
    success_measure: spl
    success_reward: 2.5
    slack_reward: -1e-3
    end_on_success: true
    # type: R2RVLN-v1
    lab_sensors:
      instruction_sensor:
        type: InstructionSensor
        instruction_sensor_uuid: instruction
      base_explorer:
        type: BaseExplorer
        ang_vel: 10.0
        area_thresh: 3.0
        forward_step_size: 0.25
        fov: 79
        lin_vel: 0.25
        map_resolution: 256
        minimize_time: true
        success_distance: 0.18
        turn_angle: 15.0
        visibility_dist: 4.5
      compass_sensor:
        type: CompassSensor
      gps_sensor:
        type: GPSSensor
        dimensionality: 2
      heading_sensor:
        type: HeadingSensor
      frontier_sensor:
        type: FrontierSensor
    measurements:
      distance_to_goal:
        type: DistanceToGoal
        # distance_to: POINT
      distance_to_goal_reward:
        type: DistanceToGoalReward
      success:
        type: Success
        success_distance: 3.0
      spl:
        type: SPL
      # steps_taken:
      #   type: NumStepsMeasurement
      # path_length:
      # oracle_success:
      # ndtw:

      
    # goal_sensor_uuid: pointgoal
    # count_obj_collisions: true
    # settle_steps: 5
    # constraint_violation_ends_episode: true
    # constraint_violation_drops_object: false
    # force_regenerate: false
    # should_save_to_cache: false
    # object_in_hand_sample_prob: 0.167
    # min_start_distance: 3.0
    # render_target: true
    # physics_stability_steps: 1
    # num_spawn_attempts: 200
    # spawn_max_dist_to_obj: 2.0
    # base_angle_noise: 0.523599
    # ee_sample_factor: 0.2
    # ee_exclude_region: 0.0
    # base_noise: 0.05
    # spawn_region_scale: 0.2
    # joint_max_impulse: -1.0
    # desired_resting_position:
    # - 0.5
    # - 0.0
    # - 1.0
    # use_marker_t: true
    # cache_robot_init: false
    # success_state: 0.0
    # should_enforce_target_within_reach: false
    # task_spec_base_path: habitat/task/rearrange/pddl/
    # task_spec: ''
    # pddl_domain_def: replica_cad
    # obj_succ_thresh: 0.3
    # enable_safe_drop: false
    # art_succ_thresh: 0.15
    # robot_at_thresh: 2.0
    # filter_nav_to_tasks: []
    # actions:
    #   stop:
    #     type: StopAction
    #     agent_index: 0
    #   move_forward:
    #     type: MoveForwardAction
    #     agent_index: 0
    #   turn_left:
    #     type: TurnLeftAction
    #     agent_index: 0
    #   turn_right:
    #     type: TurnRightAction
    #     agent_index: 0

habitat_baselines:
  evaluate: True
  eval_ckpt_path_dir: data/dummy_policy.pth
  num_environments: 1
  load_resume_state_config: False

  torch_gpu_id: 0
  tensorboard_dir: "tb"
  video_dir: "video_dir"
  test_episode_count: -1
  checkpoint_folder: "data/new_checkpoints"
  trainer_name: "vln"
  num_updates: 270000
  log_interval: 10
  num_checkpoints: 100
  # Force PyTorch to be single threaded as
  # this improves performance considerably
  force_torch_single_threaded: True

  eval:
    split: "val_unseen"
    video_option: ["disk"] #["tensorboard"]

  rl:

    policy:
      name: "HabitatBasePathPolicy"
      pointnav_stop_radius: 0.4

    ppo:
      # ppo params
      clip_param: 0.2
      ppo_epoch: 4
      num_mini_batch: 2
      value_loss_coef: 0.5
      entropy_coef: 0.01
      lr: 2.5e-4
      eps: 1e-5
      max_grad_norm: 0.2
      num_steps: 64
      use_gae: True
      gamma: 0.99
      tau: 0.95
      use_linear_clip_decay: False
      use_linear_lr_decay: False
      reward_window_size: 50

      use_normalized_advantage: False

      hidden_size: 512

    ddppo:
      sync_frac: 0.6
      # The PyTorch distributed backend to use
      distrib_backend: NCCL
      # Visual encoder backbone
      pretrained_weights: data/ddppo-models/gibson-2plus-resnet50.pth
      # Initialize with pretrained weights
      pretrained: False
      # Initialize just the visual encoder backbone with pretrained weights
      pretrained_encoder: False
      # Whether or not the visual encoder backbone will be trained.
      train_encoder: True
      # Whether or not to reset the critic linear layer
      reset_critic: False

      # Model parameters
      backbone: resnet50
      rnn_type: LSTM
      num_recurrent_layers: 2
